// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Put you code here:
    Xor(a=b, b=c, out=xorBC);
    Not(in=xorBC, out=notXorBC);
    Or(a=b, b=c, out=orBC);
    And(a=b, b=c, out=andBC);
    // CARRY is (aAND(bORC) OR bANDc
    And(a=a, b=orBC, out=aAndBorC);
    Or(a=andBC, b=aAndBorC, out=carry);
    // If bit1 is 0, XOR bc is sum. if bit1 is 1, NOT(XOR) bc is sum
    Mux(a=xorBC, b=notXorBC, sel=a, out=sum);
}
